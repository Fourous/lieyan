<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lieyan.mapper.CoachMapper">
    <!--
    数据库的版本不支持open-id,只能下划线
    -->
    <!--返回所有教练信息，在教练首页那里需要加载这些数据-->
    <select id="coachall" resultType="com.lieyan.Entity.Coach">
        SELECT  *
        FROM coach
        ORDER BY tid
        DESC
    </select>

    <!--通过教练的id找到教练-->
    <select id="coachquerybyid" resultType="com.lieyan.Entity.Coach">
        SELECT  *
        FROM coach
        WHERE tid= #{tid}
    </select>
<!--这里是读取like的-->

    <!--插入操作这里注意插入操作，是inser，很容易搞错-->
    <!--
    这里用于每次用户微信登录的时候，都会将用户的信息传输到服务器里面,但是只是传输用户
    微信官方数据，其余的数据通过其他insert插入
    -->
    <insert id="coachinsert" parameterType="com.lieyan.Entity.Coach">
        INSERT INTO
        coach (tid, tname, gender,avatar,Introduce,islike,unlike)
        VALUES (#{tid},#{tname},#{gender},#{avatar},#{Introduce},#{islike},#{unlike})
    </insert>

    <update id="coachlike"  parameterType="com.lieyan.Entity.Coach">
        UPDATE coach
        SET islike=#{islike}
        WHERE tid = #{tid}
    </update>

    <update id="coachunlike"  parameterType="com.lieyan.Entity.Coach">
        UPDATE coach
        SET unlike=#{unlike}
        WHERE tid = #{tid}
    </update>
<!--  从这里是减去一  -->
    <update id="coachlikere"  parameterType="com.lieyan.Entity.Coach">
        UPDATE coach
        SET islike=#{islike}
        WHERE tid = #{tid}
    </update>

    <update id="coachunlikere"  parameterType="com.lieyan.Entity.Coach">
        UPDATE coach
        SET unlike=#{unlike}
        WHERE tid = #{tid}
    </update>
    <!--通过id找到相应的数据记录，并且删除他,这里接口几乎用不到，不过可能以后用户
    出现问题，可以通过删除再添加的操作来更新
    -->
    <delete id="userdelete">
        DELETE FROM
        coach
        WHERE tid = #{tid}
    </delete>



</mapper>